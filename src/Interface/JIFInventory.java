package Interface;

import javax.swing.table.DefaultTableModel;
import pos.Logic;

/**
 * The logic is instantiated which will be private
 *
 * @author Diego Herrera López
 * @author Kevin Sibaja Granados
 * @author Yordany Navarro Hernandez
 * @author Tiffany Hernández Rodriguez
 * @author Jonathan Alfaro Herrera
 */
public class JIFInventory extends javax.swing.JInternalFrame {

    private Logic logic;

    /**
     * The JIFInventory constructor creates an instance of the Logic class,
     * initializes the GUI components, and reads data from storage or inventory
     * using the business logic provided by the Logic class. Then it updates the
     * jtStorage table in the GUI with the data read.
     */
    public JIFInventory() {

        logic = new Logic();
        initComponents();
        logic.readStorage(jtStorage);

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jtStorage = new javax.swing.JTable();
        btnAddStorage = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        jtSearchResult = new javax.swing.JTable();
        jlSearch = new javax.swing.JLabel();
        txtSearch = new javax.swing.JTextField();
        btnDeleteSearch = new javax.swing.JButton();
        btnSearch = new javax.swing.JButton();

        setClosable(true);
        setDefaultCloseOperation(javax.swing.WindowConstants.HIDE_ON_CLOSE);
        setIconifiable(true);
        setMaximizable(true);
        setResizable(true);
        setTitle("Módulo de inventario");

        jtStorage.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Producto", "Raciones", "Tipo"
            }
        ));
        jScrollPane1.setViewportView(jtStorage);

        btnAddStorage.setText("Agregar producto");
        btnAddStorage.setActionCommand("btnAddStorage");
        btnAddStorage.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddStorageActionPerformed(evt);
            }
        });

        jtSearchResult.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Producto", "Raciones", "Tipo"
            }
        ));
        jScrollPane2.setViewportView(jtSearchResult);

        jlSearch.setText("Buscar:");

        btnDeleteSearch.setText("Borrar");
        btnDeleteSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteSearchActionPerformed(evt);
            }
        });

        btnSearch.setText("Buscar");
        btnSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSearchActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(14, 14, 14)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jlSearch)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtSearch)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 72, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnDeleteSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 72, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(6, 6, 6)
                                .addComponent(btnAddStorage))
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 807, Short.MAX_VALUE)
                                .addComponent(jScrollPane2, javax.swing.GroupLayout.Alignment.LEADING)))
                        .addGap(0, 15, Short.MAX_VALUE))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(17, 17, 17)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 207, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnAddStorage, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(39, 39, 39)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jlSearch)
                    .addComponent(txtSearch, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnSearch)
                    .addComponent(btnDeleteSearch))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnAddStorageActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddStorageActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_btnAddStorageActionPerformed

    /**
     * Method called when the search button is clicked. Gets the default table
     * model of the jtSearchResult. If the jtSearchResult table is not empty,
     * the first row of the model is removed. Calls the logic to perform the
     * search for results using the text entered in txtSearch and the data in
     * jtStorage. Updates the jtSearchResult table with the search results.
     *
     * @param evt The action event generated by the search button.
     */
    private void btnSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSearchActionPerformed
        // Get the default table model of the jtSearchResult
        DefaultTableModel targetModel = (DefaultTableModel) jtSearchResult.getModel();
        // Check if the jtSearchResult table is not empty
        if (jtSearchResult.getRowCount() != 0) {
            // If the jtSearchResult table is not empty, remove the first row of the pattern
            targetModel.removeRow(0);
            // Call the logic to perform the search for results using the text 
            //entered in txtSearch and the data in jtStorage
            logic.searchResult(jtSearchResult, txtSearch, jtStorage);
        } else {
            logic.searchResult(jtSearchResult, txtSearch, jtStorage);
        }
    }//GEN-LAST:event_btnSearchActionPerformed

    /**
     * Method called when the search delete button is clicked. Clears the text
     * in the search field (txtSearch). Gets the default table model of the
     * jtSearchResult. Removes the first row of the model from the table.
     *
     * @param evt The action event generated by the search delete button.
     */
    private void btnDeleteSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteSearchActionPerformed
        // Clear the text in the search field (txtSearch)
        txtSearch.setText("");
        // Get the default table model of the jtSearchResult
        DefaultTableModel targetModel = (DefaultTableModel) jtSearchResult.getModel();
        // Remove the first row of the model from the table
        targetModel.removeRow(0);
    }//GEN-LAST:event_btnDeleteSearchActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAddStorage;
    private javax.swing.JButton btnDeleteSearch;
    private javax.swing.JButton btnSearch;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JLabel jlSearch;
    private javax.swing.JTable jtSearchResult;
    private javax.swing.JTable jtStorage;
    private javax.swing.JTextField txtSearch;
    // End of variables declaration//GEN-END:variables
}
