package Interface;

import javax.swing.table.DefaultTableModel;
import pos.Logic;

/**
 * The logic is instantiated which will be private
 *
 * @author Diego Herrera López
 * @author Kevin Sibaja Granados
 * @author Yordany Navarro Hernandez
 * @author Tiffany Hernández Rodriguez
 * @author Jonathan Alfaro Herrera
 */
public class JIFInventory extends javax.swing.JInternalFrame {

    private Logic logic;

    /**
     * The JIFInventory constructor creates an instance of the Logic class,
     * initializes the GUI components, and reads data from storage or inventory
     * using the business logic provided by the Logic class. Then it updates the
     * jtStorage table in the GUI with the data read.
     */
    public JIFInventory() {

        logic = new Logic();
        initComponents();
        logic.readInventory(jtInventory);

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jtInventory = new javax.swing.JTable();
        btnAddInventory = new javax.swing.JButton();
        jlSearch = new javax.swing.JLabel();
        txtSearch = new javax.swing.JTextField();
        jScrollPane2 = new javax.swing.JScrollPane();
        jtSearchResult = new javax.swing.JTable();
        btnSearch = new javax.swing.JButton();
        btnDeleteSearch = new javax.swing.JButton();
        btnDeleteInventory = new javax.swing.JButton();
        btnUpdateInventory = new javax.swing.JButton();

        setClosable(true);
        setDefaultCloseOperation(javax.swing.WindowConstants.HIDE_ON_CLOSE);
        setTitle("Módulo de inventario");
        setMinimumSize(new java.awt.Dimension(800, 500));
        setPreferredSize(new java.awt.Dimension(800, 500));

        jPanel1.setBackground(new java.awt.Color(189, 209, 222));

        jtInventory.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "Producto", "Raciones", "Precio", "Tipo"
            }
        ));
        jScrollPane1.setViewportView(jtInventory);

        btnAddInventory.setText("Agregar producto");
        btnAddInventory.setActionCommand("btnAddStorage");
        btnAddInventory.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddInventoryActionPerformed(evt);
            }
        });

        jlSearch.setText("Buscar:");

        jtSearchResult.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "Producto", "Raciones", "Precio", "Tipo"
            }
        ));
        jScrollPane2.setViewportView(jtSearchResult);

        btnSearch.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/lupa.png"))); // NOI18N
        btnSearch.setToolTipText("Buscar");
        btnSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSearchActionPerformed(evt);
            }
        });

        btnDeleteSearch.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/exis.png"))); // NOI18N
        btnDeleteSearch.setToolTipText("Borrar");
        btnDeleteSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteSearchActionPerformed(evt);
            }
        });

        btnDeleteInventory.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/garbage.png"))); // NOI18N
        btnDeleteInventory.setToolTipText("Eliminar Producto");
        btnDeleteInventory.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteInventoryActionPerformed(evt);
            }
        });

        btnUpdateInventory.setText("Actualizar");
        btnUpdateInventory.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateInventoryActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(27, 27, 27)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(btnAddInventory)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnDeleteInventory, javax.swing.GroupLayout.PREFERRED_SIZE, 129, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(btnUpdateInventory, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 732, Short.MAX_VALUE)
                                .addComponent(jScrollPane2))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jlSearch)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 522, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(btnSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 72, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(btnDeleteSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 72, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(0, 15, Short.MAX_VALUE))))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 186, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(btnAddInventory, javax.swing.GroupLayout.DEFAULT_SIZE, 45, Short.MAX_VALUE)
                    .addComponent(btnDeleteInventory, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnUpdateInventory, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 65, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtSearch, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jlSearch)
                    .addComponent(btnSearch)
                    .addComponent(btnDeleteSearch))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(24, 24, 24))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * 
     * @param evt The action event generated by the add inventory button.
     */
    private void btnAddInventoryActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddInventoryActionPerformed
     // Create an instance of the FRMDialogAddInventory class, which is a dialog for adding a plate
        FRMDialogAddInventory p = new FRMDialogAddInventory(null, true);
        // Set the dialog as modal and make it visible
        p.setVisible(true);
    }//GEN-LAST:event_btnAddInventoryActionPerformed

    /**
     * Method called when the search button is clicked. Gets the default table
     * model of the jtSearchResult. If the jtSearchResult table is not empty,
     * the first row of the model is removed. Calls the logic to perform the
     * search for results using the text entered in txtSearch and the data in
     * jtStorage. Updates the jtSearchResult table with the search results.
     *
     * @param evt The action event generated by the search button.
     */
    private void btnSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSearchActionPerformed
        // Get the default table model of the jtSearchResult
        DefaultTableModel targetModel = (DefaultTableModel) jtSearchResult.getModel();
        // Check if the jtSearchResult table is not empty
        if (jtSearchResult.getRowCount() != 0) {
            // If the jtSearchResult table is not empty, remove the first row of the pattern
            targetModel.removeRow(0);
            // Call the logic to perform the search for results using the text 
            //entered in txtSearch and the data in jtStorage
            logic.searchResult(jtSearchResult, txtSearch, jtInventory);
        } else {
            logic.searchResult(jtSearchResult, txtSearch, jtInventory);
        }
    }//GEN-LAST:event_btnSearchActionPerformed

    /**
     * Method called when the search delete button is clicked. Clears the text
     * in the search field (txtSearch). Gets the default table model of the
     * jtSearchResult. Removes the first row of the model from the table.
     *
     * @param evt The action event generated by the search delete button.
     */
    private void btnDeleteSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteSearchActionPerformed
        // Clear the text in the search field (txtSearch)
        txtSearch.setText("");
        // Get the default table model of the jtSearchResult
        DefaultTableModel targetModel = (DefaultTableModel) jtSearchResult.getModel();
        // Remove the first row of the model from the table
        if (targetModel.getRowCount()>0) {
             targetModel.removeRow(0);
        }
       
    }//GEN-LAST:event_btnDeleteSearchActionPerformed

    private void btnUpdateInventoryActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdateInventoryActionPerformed
       logic.readInventory(jtInventory);
    }//GEN-LAST:event_btnUpdateInventoryActionPerformed

    private void btnDeleteInventoryActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteInventoryActionPerformed
        logic.deleteTableInventory(jtInventory);
        logic.loadInventoryTable(jtInventory);
        logic.savePlateToFile();
    }//GEN-LAST:event_btnDeleteInventoryActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAddInventory;
    private javax.swing.JButton btnDeleteInventory;
    private javax.swing.JButton btnDeleteSearch;
    private javax.swing.JButton btnSearch;
    private javax.swing.JButton btnUpdateInventory;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JLabel jlSearch;
    private javax.swing.JTable jtInventory;
    private javax.swing.JTable jtSearchResult;
    private javax.swing.JTextField txtSearch;
    // End of variables declaration//GEN-END:variables
}
